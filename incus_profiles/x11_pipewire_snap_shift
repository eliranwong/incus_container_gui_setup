config:
  security.nesting: "true"
  security.syscalls.intercept.mknod: "true"
  security.syscalls.intercept.setxattr: "true"
  cloud-init.user-data: |
    #cloud-config
    package_update: true
    package_upgrade: true
    package_reboot_if_required: true
    packages:
      - pulseaudio-utils
      - alsa-base
      - alsa-utils
      - pavucontrol
      - dbus-user-session
      - dbus-x11
      - ibus
      - im-config
      - wget
      - nano
      - micro
    write_files:
    - path: /var/lib/cloud/scripts/per-boot/set_up_sockets.sh
      permissions: 0755
      content: |
        #!/bin/bash
        user_uid=1000
        user_name=$( getent passwd ${user_uid} | cut -d: -f1 )
        user_gid=$( getent passwd ${user_name} | cut -d: -f4 )
        if [[ -n ${user_name} ]]; then
          mnt_dir=/mnt/.container_sockets
          run_dir=/run/user/${user_uid}
          [[ ! -d "${run_dir}" ]] && mkdir -p "${run_dir}" && chmod 700 "${run_dir}" && chown ${user_uid}:${user_gid} "${run_dir}"
          [[ ! -d "${run_dir}/pulse" ]] && mkdir -p "${run_dir}/pulse" && chmod 700 "${run_dir}/pulse" && chown ${user_uid}:${user_gid} "${run_dir}/pulse"
          [[ -S "${mnt_dir}/native" ]]  && [[ -d "${run_dir}/pulse" ]] && [[ ! -e "${run_dir}/pulse/native" ]] && touch "${run_dir}/pulse/native" && sudo mount --bind "${mnt_dir}/native" "${run_dir}/pulse/native"
          [[ -S "${mnt_dir}/pipewire-0" && -d "${run_dir}" && ! -e "${run_dir}/pipewire-0" ]] && touch "${run_dir}/pipewire-0" && sudo mount --bind "${mnt_dir}/pipewire-0" "${run_dir}/pipewire-0"
          [[ -S "${mnt_dir}/pipewire-0-manager" && -d "${run_dir}" && ! -e "${run_dir}/pipewire-0-manager" ]] && touch "${run_dir}/pipewire-0-manager" && sudo mount --bind "${mnt_dir}/pipewire-0-manager" "${run_dir}/pipewire-0-manager"
        fi
    - path: /var/lib/cloud/scripts/per-once/set_up_env_vars.sh
      permissions: 0755
      content: |
        #!/bin/bash
        user_uid=1000
        home_dir="$( getent passwd ${user_uid} | cut -d: -f6 )"
        profile="${home_dir}/.profile"
        if [[ -f "${profile}" ]]; then
          echo "export DISPLAY=:1" >> "${profile}"
          echo "export NO_AT_BRIDGE=1" >> "${profile}"
          echo "export QT_QPA_PLATFORM=xcb" >> "${profile}"
          echo "export QT_QPA_PLATFORMTHEME=qt5ct" >> "${profile}"
          echo "export CLUTTER_BACKEND=x11" >> "${profile}"
          echo "export SDL_VIDEODRIVER=x11" >> "${profile}"
          echo "export GDK_BACKEND=x11" >> "${profile}"
          echo "export WINIT_UNIX_BACKEND=x11" >> "${profile}"
          #echo "export LC_CTYPE=zh_CN.UTF-8" >> "${profile}"
          echo "export XIM=ibus" >> "${profile}"
          echo "export XIM_PROGRAM=/usr/bin/ibus" >> "${profile}"
          echo "export QT_IM_MODULE=ibus" >> "${profile}"
          echo "export GTK_IM_MODULE=ibus" >> "${profile}"
          echo "export XMODIFIERS=ibus" >> "${profile}"
          echo "export DefaultIMModule=ibus" >> "${profile}"
          echo "ibus-daemon -drx" >> "${profile}"
        fi
    - path: /var/lib/cloud/scripts/per-once/change_gid.sh
      permissions: 0755
      content: |
        #!/bin/bash
        user_uid=1000
        user_name=$( getent passwd ${user_uid} | cut -d: -f1 )
        user_gid=$( getent passwd ${user_name} | cut -d: -f4 )
        home_dir=$( getent passwd ${user_name} | cut -d: -f6 )
        if [[ -n ${user_name} && ! ${user_uid} == ${user_gid} ]]; then
          group_to_move=$( getent group ${user_uid} | cut -d: -f1 )
          if [[ -n ${group_to_move} ]]; then
            for gid in {1000..6000}; do
              return_value=$( getent group ${gid} )
              if [[ -z ${return_value} ]]; then
                groupmod -g ${gid} ${group_to_move}
                break
              fi
            done
          fi
          users_group=$( getent group ${user_gid} | cut -d: -f1 )
          groupmod -g ${user_uid} ${users_group}
          chown -R ${user_uid}:${user_uid} "${home_dir}"
        fi
description: GUI X11 profile with pulseaudio+pipewire
devices:
  x11_server:
    bind: container
    connect: unix:@/tmp/.X11-unix/X1
    listen: unix:@/tmp/.X11-unix/X1
    type: proxy
  pulseaudio_socket:
    type: disk
    shift: true
    source: /run/user/1000/pulse/native
    path: /mnt/.container_sockets/native
  pipewire_socket:
    type: disk
    shift: true
    source: /run/user/1000/pipewire-0
    path: /mnt/.container_sockets/pipewire-0
  pipewire_manager_socket:
    type: disk
    shift: true
    source: /run/user/1000/pipewire-0-manager
    path: /mnt/.container_sockets/pipewire-0-manager